{"version":3,"file":"static/js/247.f781f834.chunk.js","mappings":"yNA8CA,UAzCC,WACG,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACSC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBT,OAfCE,EAAAA,EAAAA,YAAU,WACN,GAAKF,EAAL,CACC,IAAMG,EAAS,mCAAG,6GAEOC,EAAAA,EAAAA,eAAyBJ,GAFhC,OAEVK,EAFU,OAGhBN,EAASM,EAASC,KAAKC,MAHP,gDAKhBC,QAAQC,IAAI,KAAMC,SALF,yDAAH,qDAQrBP,GATyB,CAUvB,GAAE,CAACH,KAKH,8BACGF,IACC,wBAEIA,EAAMa,KAAI,SAAAJ,GAAI,OACZ,gBAAIK,UAAU,YAAd,WACE,gBACEC,IAAG,yCAAoCN,EAAKO,cACtCC,IAAKR,EAAKS,KACVC,MAAO,OAEf,uBAAIV,EAAKS,QACT,uCAAeT,EAAKW,eAPSX,EAAKY,GADxB,OAe3B,C","sources":["components/Cast/Cast.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { MoviesApi } from \"services/api\"\n\n\n function Cast() {\n    const [casts, setCasts] = useState(null);\n     const { movieID } = useParams();\n\n     useEffect(() => {\n         if (!movieID) return;\n          const fetchCast = async () => {\n        try {\n            const response = await MoviesApi.fetchMovieCast(movieID);\n            setCasts(response.data.cast)\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n    fetchCast()\n     }, [movieID])\n\n    \n\n    return (\n      <>\n        {casts && (\n          <ul>\n            {\n              casts.map(cast => (\n                <li className=\"cast-item\" key={cast.id}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\n                          alt={cast.name}\n                          width={120}\n                  />\n                  <p>{cast.name}</p>\n                  <p>Character: {cast.character}</p>\n                </li>\n              ))}\n          </ul>\n        )}\n      </>\n    );\n};\n\nexport default Cast"],"names":["useState","casts","setCasts","movieID","useParams","useEffect","fetchCast","MoviesApi","response","data","cast","console","log","message","map","className","src","profile_path","alt","name","width","character","id"],"sourceRoot":""}