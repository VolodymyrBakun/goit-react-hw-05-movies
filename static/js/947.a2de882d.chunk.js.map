{"version":3,"file":"static/js/947.a2de882d.chunk.js","mappings":"iOAIMA,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAChBC,GAAcD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAmEzB,UAjEC,WAAyB,IAAD,MACfE,GAAYC,EAAAA,EAAAA,MAAZD,QACN,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAiB/C,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CAEA,IAAMU,EAAY,mCAAG,6GAEWC,EAAAA,EAAAA,kBAA4BX,GAFvC,OAEXY,EAFW,OAGjBR,EAASQ,GAHQ,gDAKjBC,QAAQC,IAAI,KAAMC,SALD,yDAAH,qDAQlBL,GAVoB,CAWrB,GAAE,CAACV,KAGF,8BACGG,IACC,4BACE,SAAC,KAAD,CAAMa,GAAIX,EAAV,sBACA,gBACEY,IAAG,yCAAoCd,EAAMe,aAC7CC,IAAKhB,EAAMiB,MACXC,MAAO,OAET,4BACE,wBAAKlB,EAAMiB,SACX,0CAAkBjB,EAAMmB,iBACxB,sCACA,uBAAInB,EAAMoB,YACV,qCACC,UAAApB,EAAMqB,cAAN,eAAcC,QAAS,EACpBtB,EAAMqB,OAAOE,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACtB,OACE,cAAGC,UAAU,QAAb,SACGD,GADuBD,EAI7B,IACD,gBAEN,4BACE,6CACA,SAAC,KAAD,CAAMX,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,yBAEF,SAAC,EAAAc,SAAD,CAAUC,UAAU,wCAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACpC,EAAD,OAC5B,SAAC,KAAD,CAAOmC,KAAK,UAAUC,SAAS,SAAClC,EAAD,eAO5C,C,8FCpEKmC,EAAS,mCAEFvB,EAAY,CACjBwB,YADiB,WACF,OAAD,qHACKC,EAAAA,EAAAA,IAAA,0FADL,cACZC,EADY,yBAIXA,GAJW,4CAKnB,EAEKC,kBARiB,SAQCtC,GAAU,OAAD,uHACVoC,EAAAA,EAAAA,IAAA,6CACmBpC,EADnB,oBACsCkC,IAF5B,uBACxBK,EADwB,EACxBA,KADwB,kBAItBA,GAJsB,4CAK9B,EAEKC,eAfe,SAeAC,GAAU,OAAD,qHACHL,EAAAA,EAAAA,IAAA,6CACmBK,EADnB,4BAC8CP,EAD9C,oBADG,cACpBG,EADoB,yBAInBA,GAJmB,4CAK7B,EAEMK,kBAtBc,SAsBID,GAAU,OAAD,qHACPL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,4BAC4CP,EAD5C,2BADO,cACxBG,EADwB,yBAIvBA,GAJuB,4CAKjC,EAEOM,kBA7Ba,SA6BKC,GAAa,OAAD,qHACXR,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,iCAC+DU,EAD/D,gCADW,cAC5BP,EAD4B,yBAI3BA,GAJ2B,4CAKrC,E","sources":["components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { Suspense, lazy, useEffect, useState } from 'react';\nimport { Link, Route, Routes, useParams, useLocation } from 'react-router-dom';\nimport { MoviesApi } from 'services/api';\n\nconst LazyCast = lazy(() => import('components/Cast/Cast'));\nconst LazyReviews = lazy(() => import('components/Reviews/Reviews'));\n\n function MovieDetails() {\n  const { movieID } = useParams();\n    const [movie, setMovie] = useState(null);\n    \n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? '/';\n\n\n  useEffect(() => {\n    if (!movieID) return;\n\n    const fetchDetails = async () => {\n      try {\n        const detailedMovie = await MoviesApi.fetchMovieDetails(movieID);\n        setMovie(detailedMovie);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchDetails();\n  }, [movieID]);\n\n  return (\n    <>\n      {movie && (\n        <div>\n          <Link to={backLinkHref}>Go back</Link>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.title}\n            width={200}\n          />\n          <div>\n            <h1>{movie.title}</h1>\n            <p>Vote Average: {movie.vote_average}</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h3>Genres:</h3>\n            {movie.genres?.length > 0\n              ? movie.genres.map(({ id, name }) => {\n                  return (\n                    <p className=\"genre\" key={id}>\n                      {name}\n                    </p>\n                  );\n                })\n              : 'No genres'}\n          </div>\n          <div>\n            <h2>Additional Info</h2>\n            <Link to=\"cast\">Cast</Link>\n            <Link to=\"revievs\">Revievs</Link>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Routes>\n              <Route path=\"cast\" element={<LazyCast />} />\n              <Route path=\"revievs\" element={<LazyReviews />} />\n            </Routes>\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\nconst APIKEY = \"b9984943b63ba7234c73c01c632259d1\";\n\nexport const MoviesApi = {\n  async fetchMovies() {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=b9984943b63ba7234c73c01c632259d1`\n    );\n    return response;\n  },\n\n  async fetchMovieDetails(movieID) {\n    const {data} = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieID}?api_key=${APIKEY}`\n    );\n      return data\n    },\n  \n    async fetchMovieCast(movieId) {\n        const response = await axios.get(\n            `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIKEY}&language=en-US`\n        );\n        return response\n    },\n\n     async fetchMovieReviews(movieId) {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n        );\n        return response\n    },\n     \n      async fetchMovieByQuery(movieQuery) {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=${APIKEY}&language=en-US&query=${movieQuery}&page=1&include_adult=false`\n        );\n        return response\n    },\n    \n};\n\n\n"],"names":["LazyCast","lazy","LazyReviews","movieID","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","fetchDetails","MoviesApi","detailedMovie","console","log","message","to","src","poster_path","alt","title","width","vote_average","overview","genres","length","map","id","name","className","Suspense","fallback","path","element","APIKEY","fetchMovies","axios","response","fetchMovieDetails","data","fetchMovieCast","movieId","fetchMovieReviews","fetchMovieByQuery","movieQuery"],"sourceRoot":""}